[url "git@github.com:"]
	pushInsteadOf = git://github.com/
[url "repo.or.cz:"]
	pushInsteadOf = git://repo.or.cz/
[user]
	name = Adam Dinwoodie
	email = Adam.Dinwoodie@metaswitch.com
[color]
	ui = true
[log]
	decorate = short
[rerere]
	enabled = true
[grep]
	lineNumber = true
[rebase]
	autosquash = true
[svn]
	pushmergeinfo = true
[alias]
        # When using bashisms below (notably [[ ... ]]), make sure to invoke
        # bash explicitly -- on Debian, Git aliases beginning with "!" are
        # invoked in dash by default.

        # Simple short forms
        st = status
        co = checkout
        ci = commit
        h = help

        # More complicated shortcuts
        about = describe --all --always
        raw = show --format=raw
        amend = commit --amend -C HEAD
        ita = add --intent-to-add
        rm-cur-br = "!bash -c 'br=$(git symbolic-ref HEAD | cut -b 12-); git detach; if [[ $1 == -D ]]; then git branch -D $br; else git branch -d $br; fi' --"

        # Graphical logs
        lol = log --graph --decorate --pretty=oneline --abbrev-commit --date-order
        lola = log --graph --decorate --pretty=oneline --abbrev-commit --all --date-order
        lolas = "!f() { git log --graph --decorate --pretty=oneline --abbrev-commit --all --date-order $(git stash list | sed -r 's/(stash@\\{[0-9]+\\}):.*$/\\1/');}; f"

        # Use HEAD^0 to specify HEAD's tree, rather than --detach, on the
        # grounds that Git 1.7.2.5 (as used on northrend.tastycake.net) doesn't
        # support the latter.
        detach = checkout -q HEAD^0

        # Repository information
        list-all-objs = "!f() { { git rev-list --objects --all; git rev-list --objects -g --no-walk --all; git rev-list --objects --no-walk $(git fsck --unreachable | grep '^unreachable commit' | cut -d' ' -f3);} | cut -d' ' -f1 | sort -u;}; f"
        roots = "!f() { git rev-list --parents \"$@\" | grep -E \"^[a-f0-9]{40}$\";}; f"

        # Fancy checkouts
        sci = svn dcommit
        sreb = svn rebase
        upout = !bash -c 'git checkout \"$@\" && git svn rebase' --
        pullout = "!bash -c 'git checkout \"$@\"; git pull' --"
        rebout = !bash -c 'git checkout \"$@\" && git rebase' --

        # Conflict handling
        conflicting = !bash -c '[[ -n $(git ls-files --unmerged) ]]'
        conflicts = "!cd ${GIT_PREFIX:-.}; git ls-files --unmerged | cut -f2 | sort -u"

        # Alias management
        alias = "!bash -c 'while getopts d:e opt; do case $opt in d) del=$OPTARG;; e) exec=yes;; esac; done; shift $((OPTIND - 1)); if [[ -n $del ]]; then git unalias $del; elif (( $# == 0 )); then git list-aliases; elif (( $# == 1 )); then git config --get \"alias.$1\"; elif [[ -n $exec ]]; then git set-alias-exec \"$@\"; else git set-alias \"$@\"; fi' --"
        list-aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/ / = /' | sort
        set-alias = "!bash -c 'alias=\"$1\"; shift; git config --global alias.\"$alias\" \"$*\"' --"
        set-alias-exec = "!bash -c 'alias=\"$1\"; shift; git set-alias \"$alias\" \"!bash -c '\\''$@'\\'' --\"' --"
        unalias = !bash -c 'git config --global --unset alias.\"$1\"' --
        lug = log -u
	#rev-to-hash = "!bash -c 'while getopts b: opt; do case $opt in b) branch=$OPTARG;; esac; done; shift $((OPTIND - 1)); while (( $# > 0 )); do count=0; for r in $(git svn find-rev r$1 $branch); do if [[ $r == +([0-9a-f]) ]]; then (( count++ )); echo $r; fi; done; if (( count != 1 )); then echo \"Caution: found $count commits for r$1\" >&2; fi; shift; done' --"
	rev-to-hash = "!bash -c 'while getopts b: opt; do case $opt in b) branch=$OPTARG;; esac; done; shift $((OPTIND - 1)); while (( $# > 0 )); do count=0; for r in $(git svn find-rev r$1 $branch | sed -nr '/^[0-9a-f]{40}/p'); do (( count++ )); echo $r; done; if (( count != 1 )); then echo \"Caution: found $count commits for r$1\" >&2; fi; shift; done' --"
        rewrite-merged-msgs = "filter-branch -f --msg-filter 'sed \"/^Conflicts:\\$/,\\$d;s/.*repos\\/sbc\\/\\([^@]*\\)@\\([0-9]*\\).*/This is a semi-automatic merge of r\\2 from \\1./;/^\\!/d;/^-\\!/d;/Merged r.* via automerge/d\" | cat -s' --"
        sth = status -- .
        rm-untracked = !bash -c 'git status --porcelain | sed -rn \"s/^\\?\\? //p\" | xargs -rt rm' --
	db = "!bash -c '[[ $1 ]] && branch_name=$1 || branch_name=$(git rev-parse --abbrev-ref HEAD); git config --get branch.\"$branch_name\".description' --"
        sdb = !bash -c 'git config branch.\"$(git rev-parse --abbrev-ref HEAD)\".description \"$*\"' --
[diff]
        algorithm = patience
[push]
	default = upstream

[merge]
	tool = vimdiff
	#conflictstyle = diff3
[core]
	excludesfile = /export/home/build/.gitignore
[reviewboard]
	url = http://flash/reviewboard
